[{"/app/src/index.js":"1","/app/src/compnents/header/index.js":"2","/app/src/screens/list/index.js":"3","/app/src/screens/detail/index.js":"4","/app/src/compnents/ui/no-record/no-record.js":"5","/app/src/screens/not-found/index.js":"6","/app/src/screens/auth/login/index.js":"7","/app/src/screens/auth/join/index.js":"8","/app/src/utilities/auth.js":"9","/app/src/config.js":"10","/app/src/app.js":"11","/app/src/context/auth.js":"12","/app/src/utilities/request.js":"13","/app/src/compnents/ui/spinner/index.js":"14","/app/src/screens/Create/index.js":"15","/app/src/screens/create/index.js":"16"},{"size":224,"mtime":1609665601000,"results":"17","hashOfConfig":"18"},{"size":1028,"mtime":1609671064000,"results":"19","hashOfConfig":"18"},{"size":838,"mtime":1609657814000,"results":"20","hashOfConfig":"18"},{"size":2076,"mtime":1609671855000,"results":"21","hashOfConfig":"18"},{"size":128,"mtime":1609657412000,"results":"22","hashOfConfig":"18"},{"size":144,"mtime":1609657487000,"results":"23","hashOfConfig":"18"},{"size":2152,"mtime":1609668784000,"results":"24","hashOfConfig":"18"},{"size":3546,"mtime":1609674213000,"results":"25","hashOfConfig":"18"},{"size":1000,"mtime":1609674530000,"results":"26","hashOfConfig":"18"},{"size":175,"mtime":1609661141000,"results":"27","hashOfConfig":"18"},{"size":2198,"mtime":1609675489000,"results":"28","hashOfConfig":"18"},{"size":85,"mtime":1609666076000,"results":"29","hashOfConfig":"18"},{"size":519,"mtime":1609674957000,"results":"30","hashOfConfig":"18"},{"size":124,"mtime":1609670042000,"results":"31","hashOfConfig":"18"},{"size":4568,"mtime":1609675636000,"results":"32","hashOfConfig":"18"},{"size":4568,"mtime":1609675636000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"15yp1wr",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/index.js",[],["71","72"],"/app/src/compnents/header/index.js",[],"/app/src/screens/list/index.js",[],"/app/src/screens/detail/index.js",["73","74"],"// libraries\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { NoRecord } from \"../../compnents/ui/no-record/no-record\";\n\n//components\nimport {Spinner} from '../../compnents/ui/spinner';\nimport { requestApi } from \"../../utilities/request\";\n\n// styles\nimport './index.css';\n\nfunction Detail() {\n  const { slug } = useParams();\n  const [film,setFilm] = useState({});\n  //fetch film by slug\n  useEffect(()=>{\n    async function fetchDate(){\n      const films = await requestApi({url:`/film/${slug}`});\n      if(films.statusCode == 404){\n        setFilm({notfound:true});\n      }else{\n        setFilm({...films});\n      }\n    }\n    fetchDate();\n  },[setFilm]);\n\n  let html = <Spinner />\n  if(film.id){\n    html = (\n      <div\n      style={{ backgroundImage: `linear-gradient(to left, #070707, #070707, transparent), url(${film.photo})` }}\n      className=\"Detail\"\n      >\n        <h4 className=\"Detail-price\">Ticket Price: {film.ticket_price} AED</h4>\n        <h2 className=\"Detail-heading\">\n          <strong>{film.name} </strong>\n          <span>({film.rel_date})</span>\n        </h2>\n        <h3 className=\"Detail-genre\">{film.genres.map((genre)=>{return genre.name}).join(', ')}</h3>\n\n        <p className=\"Detail-plot\">{film.description}</p>\n\n        <div className=\"Detail-list\">\n          <span className=\"Detail-listKey\">Country: </span>\n          <span>{film.country}</span>\n        </div>\n\n        <div className=\"Detail-list\">\n          <span className=\"Detail-listKey\">Rating: </span>\n          <span>{film.rating}</span>\n        </div>\n\n        <div className=\"Detail-list\">\n          <span className=\"Detail-listKey\">Ticket: </span>\n          <span>{film.ticket_price} AED</span>\n        </div>\n\n        <div className=\"Detail-list\">\n          <span className=\"Detail-listKey\">Released: </span>\n          <span>{film.rel_date}</span>\n        </div>\n      </div>\n    )\n  }\n  if(film.notfound)\n    html = <NoRecord />\n  \n  return (\n    <Fragment>\n      {html}\n    </Fragment>\n  );\n}\n\nexport default Detail;\n","/app/src/compnents/ui/no-record/no-record.js",[],"/app/src/screens/not-found/index.js",[],"/app/src/screens/auth/login/index.js",["75"],"import { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport config from '../../../config';\n//auth context\nimport { authContext } from '../../../context/auth';\n//utils\nimport { saveUser } from '../../../utilities/auth';\n// styles\nimport '../../../form.css';\n\nfunction Login() {\n  //states\n  const [error,setError] = useState('');\n  const [email,setEmail] = useState('');\n  const [password,setPassword] = useState('');\n  const [toHome,setToHome] = useState(false);\n  //auth context\n  const {setLoggedIn} = useContext(authContext);\n\n  //utilityfunction\n  const handleEmail = (e) => {\n    setEmail( e.target.value );\n  }\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  }\n  //Utiity function\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const data = {email, password};\n    try{\n      const json = fetch( `${config.API_URL}/auth/login`, { method: 'POST',\n        body: JSON.stringify(data),\n        headers:{ 'Content-Type': 'application/json' } });\n      const response = await (await json).json();\n      if(response.error)\n        setError(response.message);\n      else{\n        saveUser(response);\n        setToHome(true);\n        setLoggedIn(true);\n      }\n      \n    }catch(e){\n      console.log(e);\n    }\n\n  }\n\n  return (\n    <form className=\"Form\" method=\"post\" onSubmit={handleLogin}>\n      {toHome && <Redirect to=\"/films\" />}\n      {error && <span className=\"g-error\">{error}</span>}\n      <label className=\"Form-label\" htmlFor=\"email\">\n        <span className=\"Form-text\">Email</span>\n        <input value={email.value} onChange={ handleEmail } className=\"Form-input\" name=\"email\" type=\"email\" placeholder=\"Place enter email\" required/>\n      </label>\n\n      <label className=\"Form-label\" htmlFor=\"password\">\n        <span className=\"Form-text\">Password</span>\n        <input value={password.value} onChange={handlePassword} className=\"Form-input\" name=\"password\" type=\"password\" placeholder=\"Place enter password\" autoComplete='off' required/>\n      </label>\n\n      <button type=\"submit\" className=\"Form-btn\">Sign In</button>\n    </form>\n  );\n}\n\nexport default Login;\n","/app/src/screens/auth/join/index.js",["76"],"import { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport config from '../../../config';\nimport { authContext } from '../../../context/auth';\n// styles\nimport '../../../form.css';\nimport { saveUser } from '../../../utilities/auth';\nfunction Join() {\n  //states\n  const [name,setName] = useState('');\n  const [email,setEmail] = useState('');\n  const [password,setPassword] = useState('');\n  const [rePassword,setRePassword] = useState('');\n  const [toHome,setToHome] = useState(false);\n  const [errors,setErrors] = useState({});\n  //auth context\n  const {setLoggedIn} = useContext(authContext);\n\n  //util functions\n  const setError = (errors) => {\n    if(errors.length > 0){\n      const errorObj = errors.reduce( (obj,error) => {\n        obj[error.entity] = error.message;\n        return obj;\n      },{});\n      setErrors(errorObj);\n    }\n  }\n  const handleRegister = async (e)=>{\n     e.preventDefault();\n    const data = {name, email, password, passwordRe:rePassword};\n    try{\n      const json = await fetch( `${config.API_URL}/auth/register`, { method: 'POST',\n        body: JSON.stringify(data),\n        headers:{ 'Content-Type': 'application/json' } });\n      const response = await json.json();\n      if(response.error)\n        setError(response.message);\n      else{\n        saveUser(response);\n        setToHome(true);\n        setLoggedIn(true);\n      }\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n\n  const handleFieldChange = (field) => {\n    return (e) => {\n      switch(field){\n        case 'name':\n          setName(e.target.value)\n        break;\n        case 'email':\n          setEmail(e.target.value)\n        break;\n        case 'password':\n          setPassword(e.target.value)\n        break;\n        case 'rePassword':\n          setRePassword(e.target.value)\n        break;\n      }\n    }\n  } \n  return (\n    <form className=\"Form\" method=\"post\" onSubmit={handleRegister}>\n      {toHome && <Redirect to=\"/films\" />}\n      <label className=\"Form-label\" htmlFor=\"name\">\n        <span className=\"Form-text\">Name</span>\n        <input value={name} onChange={handleFieldChange('name')} className=\"Form-input\" name=\"name\" type=\"text\" placeholder=\"Place enter name\" required/>\n        {errors.name && <span className=\"error\">{errors.name}</span>}\n      </label>\n\n      <label className=\"Form-label\" htmlFor=\"email\">\n        <span className=\"Form-text\">Email</span>\n        <input value={email} onChange={handleFieldChange('email')}  className=\"Form-input\" name=\"email\" type=\"email\" placeholder=\"Place enter email\" required/>\n        {errors.email && <span className=\"error\">{errors.email}</span>}\n      </label>\n\n      <label className=\"Form-label\" htmlFor=\"password\">\n        <span className=\"Form-text\">Password</span>\n        <input value={password} onChange={handleFieldChange('password')}  className=\"Form-input\" name=\"password\" type=\"password\" placeholder=\"Place enter password\" required/>\n        {errors.password && <span className=\"error\">{errors.password}</span>}\n      </label>\n\n      <label className=\"Form-label\" htmlFor=\"retype-password\">\n        <span className=\"Form-text\">Password</span>\n        <input value={rePassword} onChange={handleFieldChange('rePassword')}  className=\"Form-input\" name=\"passwordRe\" type=\"password\" placeholder=\"Place retype password\" required/>\n        {errors.passwordRe && <span className=\"error\">{errors.passwordRe}</span>}\n      </label>\n\n      <button type=\"submit\" className=\"Form-btn\">Register</button>\n    </form>\n  );\n}\n\nexport default Join;\n","/app/src/utilities/auth.js",["77"],"/** utility function to parse required cookie */\nfunction getCookie(name){\n  let dc = document.cookie;\n  debugger;\n  let prefix = name + \"=\";\n  var begin = dc.indexOf(\"; \" + prefix);\n  if (begin === -1) {\n      begin = dc.indexOf(prefix);\n      if (begin !== 0) return null;\n  }\n  else\n  {\n      begin += 2;\n      var end = document.cookie.indexOf(\";\", begin);\n      if (end === -1) {\n      end = dc.length;\n      }\n  }\n  return decodeURI(dc.substring(begin + prefix.length, end));\n}\n/**save logged user info */\nexport function saveUser({user,token}){\n  localStorage.setItem(\"user\", JSON.stringify(user));\n  localStorage.setItem(\"film-token\", token.access_token);\n}\n/** check if user have jwt token in cookie */\nexport function isAuth(){\n  if(localStorage.getItem('film-token'))\n    return true;\n  else\n    return false;\n}\n\nexport function getToken(){\n  return localStorage.getItem('film-token')\n}\n\nexport function logout(){\n  localStorage.removeItem('film-token')\n  localStorage.removeItem('user')\n}","/app/src/config.js",[],"/app/src/app.js",[],"/app/src/context/auth.js",[],"/app/src/utilities/request.js",[],"/app/src/compnents/ui/spinner/index.js",[],"/app/src/screens/Create/index.js",[],"/app/src/screens/create/index.js",["78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":20,"column":27,"nodeType":"87","messageId":"88","endLine":20,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":27,"column":5,"nodeType":"91","endLine":27,"endColumn":14,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":19,"column":10,"nodeType":"95","messageId":"96","endLine":19,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":52,"column":7,"nodeType":"99","messageId":"100","endLine":65,"endColumn":8},{"ruleId":"93","severity":1,"message":"101","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":64,"column":103,"nodeType":"104","endLine":64,"endColumn":115},{"ruleId":"102","severity":1,"message":"103","line":70,"column":105,"nodeType":"104","endLine":70,"endColumn":118},{"ruleId":"102","severity":1,"message":"103","line":76,"column":97,"nodeType":"104","endLine":76,"endColumn":111},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getCookie' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [setFilm, slug]",{"range":"110","text":"111"},[706,715],"[setFilm, slug]"]